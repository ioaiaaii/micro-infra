argo-cd:
  global:
    networkPolicy:
      create: false
      defaultDenyIngress: false
    # priorityClassName: system-cluster-critical
    tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Equal
        value: infrastructure
    affinity:
      nodeAffinity:
        matchExpressions:
          - key: dedicated
            operator: In
            values:
            - infrastructure
    logging:
      format: json
      level: error    
  dex:
    enabled: false
  redis:
    resources:
      limits:
        cpu: 50m
        memory: 64Mi
      requests:
        cpu: 10m
        memory: 32Mi
  controller:        
    resources:
      limits:
        cpu: 500m
        memory: 1024Mi
      requests:
        cpu: 250m
        memory: 712Mi
  server:
    autoscaling:
      enabled: true
      maxReplicas: 4
      targetCPUUtilizationPercentage: 70
      targetMemoryUtilizationPercentage: 70
    resources:
      limits:
        cpu: 100m
        memory: 300Mi
      requests:
        cpu: 50m
        memory: 128Mi
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/auth-tls-secret: infrastructure/mtls-ca-secret  # CA certificate secret
        nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
        nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "false"
        nginx.ingress.kubernetes.io/enable-opentelemetry: "false"        
      ingressClassName: "nginx"
      hostname: argocd.ioaiaaii.net
      extraTls:
      - hosts:
        - argocd.ioaiaaii.net
        secretName: letsencrypt-cluster-cert-ioaiaaii     
  repoServer:
    name: repo-server
    autoscaling:
      enabled: true
      maxReplicas: 4
      targetCPUUtilizationPercentage: 70
      targetMemoryUtilizationPercentage: 70
    resources:
     limits:
       cpu: 100m
       memory: 256Mi
     requests:
       cpu: 50m
       memory: 128Mi
  applicationSet:
    resources:
     limits:
       cpu: 50m
       memory: 128Mi
     requests:
       cpu: 10m
       memory: 64Mi
  configs:
    params:
      server.insecure: true
    repositories:
      micro-helm-repo:
        name: micro-infra-charts
        type: git
        url: https://github.com/ioaiaaii/micro-infra.git
      argo-helm-repo:
        name: argo-helm
        type: helm
        url: https://argoproj.github.io/argo-helm
      products-ioaiaiii:
        name: ioaiaiii.net
        type: git
        url: https://github.com/ioaiaaii/ioaiaaii.net.git
      prometheus-community-repo:
        name: prometheus-community
        type: git
        url: https://github.com/prometheus-community/helm-charts.git
